题目描述
输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。
要求不能创建任何新的结点，只能调整树中结点指针的指向。/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    TreeNode* Convert(TreeNode* pRootOfTree)
    {
        if(pRootOfTree == NULL)
            return NULL;
        //双向链表最后一个结点
        TreeNode* last_node = nullptr;
        
        //递归方式构建双向链表
        _Convert(pRootOfTree,last_node);
        
        //通过链表尾部结点找到头结点。
        while(last_node->left != NULL)
        {
            last_node = last_node->left;
        }
        
        //返回链表
        return last_node;
    }
    
    void  _Convert(TreeNode* cur,TreeNode* & last_node)
    {
        //边界条件
        if(cur == NULL)
            return ;
        //遍历左子树
        _Convert(cur->left,last_node);
        
        cur->left = last_node;   //单侧连接
        if(last_node != NULL)
            last_node->right = cur; //单侧连接
        last_node = cur;
        //遍历右子树
        _Convert(cur->right,last_node);
    }
};