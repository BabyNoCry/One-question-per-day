题目描述
一个整型数组里除了两个数字之外，其他的数字都出现了两次。
请写程序找出这两个只出现一次的数字。


思路:1）如果把数组中的所有数字都依次异或一遍，则可以消掉成对出现的数字，那么还有两个数字是单一的，肯定也不同，那么最终异或的结果肯定不是0。表示在二进制中肯定有一位是1，那么两个不同的数字，一定有一个在该位为1，另一个在该位为0。如果将整个数组按照该位是否为1分为两部分，那么这两部分各自包含一个单一数字。

2）分为两部分的数组，分别异或，最终结果就是这两个数。

class Solution {
public:
    void FindNumsAppearOnce(vector<int> data,int* num1,int *num2) {
        int tmp = 0; //将所有的数字进行异或的结果。
        *num1 = 0;
        *num2 = 0;
        for(int i = 0;i<data.size();i++)
        {
            tmp ^= data[i];
        }
        int i = 0;
        for( i = 0;i<8*sizeof(int) ; i++)
        {
            if((tmp>>i)&1)
            {
                break;
            }
        }
        for(int j = 0;j<data.size();j++)
        {
            if((data[j] >> i) & 1)
            {
                *num1 ^= data[j];
                
            }
            else
            {
                *num2 ^= data[j];
            }
        }
        
        
    }
};