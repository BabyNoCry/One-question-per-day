题目描述
输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。
假设输入的数组的任意两个数字都互不相同。
class Solution {
public:
    bool VerifySquenceOfBST(vector<int> sequence) {
        //二叉搜索树的中序遍历是有序的，左子树的值都小于根节点，右子树的值都大于根节点
        //则重点在于：后续遍历的最后一个值是根，前面部分分为两部分，一部分小于根节点，一部分大于根节点
        // 依次确定左右子树的节点数，然后分别递归判断两个子树是否符合上面的要求。
        if(sequence.size()  == 0) 
            return false;
        return _VerifySquenceOfBST(sequence,0,sequence.size()-1);
            
        
    }
   bool _VerifySquenceOfBST(vector<int> v, int start,int end)
   {
       if(start>= end)
           return true;
       int root = v[end];
       int i = 0;
       for( i = 0;i<end;i++)
       {
           if(v[i] > root)
           {
               break;
            }
       }
       for(int j = i;j<end;j++)
       {
           if(v[j] < root)
           {
               return false;
           }
       }
       
       //判断左子树是否符合
       bool left = true;
       _VerifySquenceOfBST(v,start,i-1);
       
       bool right = true;
       _VerifySquenceOfBST(v,i,end-1);
       return left&&right;
   }
};