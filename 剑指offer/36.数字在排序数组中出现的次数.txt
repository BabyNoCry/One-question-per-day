
题目描述
统计一个数字在排序数组中出现的次数。

分析：看到有序想到利用二分查找，分别找到第一次k的下标，以及最后一个
k的下标。进行相减加一得到K的个数。

class Solution {
public:
    int Getfirst(vector<int>& data,int k,int begin,int end)
    {
        if(begin > end)
            return -1;
        int mid = begin + (end - begin)/2;
        if(data[mid] == k )
        {
            if(mid == begin || data[mid-1] != k)
                return mid;
            else
                end = mid -1;
        }
        else
        {
            if(data[mid] > k)
            {
                end = mid -1;
            }
            else
                begin = mid + 1;
        }
        return Getfirst(data,k,begin,end);
    }
    
     int Getlast(vector<int>& data,int k,int begin,int end)
    {
        if(begin > end)
            return -1;
         int mid = begin + (end - begin)/2;
         if(data[mid] == k)
         {
             if(mid  == end || data[mid + 1] != k)
                 return mid;
             else
                 begin = mid+1;
         }
         else
         {
             if(data[mid] > k)
             {
                 end = mid -1;
             }
             else
                 begin = mid + 1;
          }
         return Getlast(data,k,begin,end);
    }
    int GetNumberOfK(vector<int> data ,int k) {
        if(data.size() == 0)
            return 0;
        int first = Getfirst(data,k,0,data.size()-1);
        int last = Getlast(data,k,0,data.size()-1);
        
        if(first >=0 && last >= 0)
            return last - first +1;
        return 0;
    }
};