题目描述
输入一个链表，反转链表后，输出新链表的表头。
一、递归方法
先反转后面的链表，从最后面的两个结点开始反转，依次向前，将后一个链表结点指向前一个结点，注意每次反转后要将原链表中前一个结点的指针域置空，
表示将原链表中前一个结点指向后一个结点的指向关系断开。
class Solution {
public:
    ListNode* ReverseList(ListNode* pHead) {
        if(pHead == NULL || pHead->next == NULL)
            return pHead;
        else
        {
            ListNode* newhead = ReverseList(pHead->next);
            pHead->next->next = pHead;
            pHead->next = NULL;
            return newhead;
        }
    }
};
二 、三个指针：
class Solution {
public:
    ListNode* ReverseList(ListNode* pHead) {
        if(pHead ==NULL || pHead->next == NULL)
            return pHead;
        ListNode* cur = pHead;
        ListNode* next = pHead->next;
        ListNode* prev = NULL;
        while(next != NULL)
        {
            cur ->next = prev;
            prev = cur;
            cur = next;
            next = next->next;
        }
        cur->next =  prev;
        return cur;
        
    }
};