题目描述
请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。
例如，字符串"+100","5e2","-123","3.1416"和"-1E-16"都表示数值。 
但是"12e","1a3.14","1.2.3","+-5"和"12e+4.3"都不是。

class Solution {
public:
        /*
思路：需要满足一下规则（正则表达式，直接用理解困难）
1 e/E后面必须跟数字，且只能有一个e/E；
2 第一次出现的符号（+/-）要么在开头，要么紧接在e/E后面，
? 第二次出现的符号（+/-）只能在e/E后面；
3 小数点只能出现一次，并且只能出现在e/E前面；
4 不能出现除了0~9，+/-,.,e/E以外的字符

前提条件：
1 如果小数点前面没有数字自动补零。比如-.799相当于-0.799;
2 如果符号后面没有数字自动补零。比如+e+相当于+0e+0;
*/
   
    bool isNumeric(char* string)
    {
        // 记录・加减sign  记录 是否出现过'.' 记录是否出现过  E/e
        bool hasS = false,hasD = false,hasE = false;
        for(int i = 0 ;i < strlen(string) ;i++)
        {
          
            if(string[i] == 'E' || string[i] == 'e')
            {
                  //E的后面只能接数字 
               if(i == strlen(string) -1 ) return false;
                //E只能出现一次
                if(hasE) return false;
                
                hasE = true;
            }
            else if(string[i] == '+' ||string[i] == '-')
            {
                //加减号 到二次出现，其前面必须是e
                if(hasS && string[i-1] != 'e' && string[i-1] != 'E')
                    return false;
                //加减号第一次出现，要么在开头，要么出现在e的后面
                if(!hasS && i != 0 && string[i-1] != 'e' && string[i-1] != 'E')
                    return false;
                hasS = true;
            }
            else if(string[i] == '.')
            {    
                //小数点只能有一个，并且只能出现在e的前面
                if(hasD || hasE)
                    return false;
                hasD = true;
            }
            //不能出现除了0~9，+/-,.,e/E以外的字符
            else if(string[i] < '0' || string[i] > '9')
                return false;
        }
        return true;
    }

};