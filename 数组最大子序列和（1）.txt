

给定K个整数的序列{ N1, N2, ..., NK }，其任意连续子序列可表示为{ Ni, Ni+1, ..., Nj }，其中 1 <= i <= j <= K。最大连续子序列是所有连续子序列中元素和最大的一个，例如给定序列{ -2, 11, -4, 13, -5, -2 }，其最大连续子序列为{ 11, -4, 13 }，最大和为20。现在增加一个要求，即还需要输出该子序列的第一个和最后一个元素。

输入描述:
    测试输入包含若干测试用例，每个测试用例占2行，第1行给出正整数K( K< 10000 )，第2行给出K个整数，中间用空格分隔。当K为0时，输入结束，该用例不被处理。


输出描述:
    对每个测试用例，在1行里输出最大和、最大连续子序列的第一个和最后一个元素，中间用空格分隔。如果最大连续子序列不唯一，则输出序号i和j最小的那个（如输入样例的第2、3组）。若所有K个元素都是负数，则定义其最大和为0，输出整个序列的首尾元素。

#include<iostream>
using namespace std;
int main()
{
    int max,sum,k;
    while(cin>>k)
    {
        if(k == 0)
            break;
        int tmp  = 0;
        cin>>tmp;
        int start ,nstart,nend;
        int last ,first;
        start = first = sum = nstart = nend = max = tmp;
        for(int i = 1;i<k;i++)
        {
            cin >>tmp;
            //当sum 小于0 时，更新序列
            if(sum < 0)
            {
                sum = 0;
                start = tmp;  //记录新序列 开头
            }
            
            sum  += tmp;
            if(sum > max)
            {
                nstart = start ;
                max = sum;
                nend = tmp;
            }
            if( i == k-1)
                last = tmp;
        }
        
        //如序列全为负数，则max为负数。 最大值为0，开始结束分别为序列的头和尾
        if(max < 0)
        {
            cout<< 0 << " "<<first << " "<<last <<endl;
        }
        else
            cout<<max << " "<<nstart<<" "<<nend<<endl;
    }
}