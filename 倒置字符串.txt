倒置字符串
将一句话的单词进行倒置，标点不倒置。比如 I like beijing. 经过函数后变为：beijing. like I
输入描述:
每个测试输入包含1个测试用例： I like beijing. 输入用例长度不超过100
输出描述:
依次输出倒置之后的字符串,以空格分割
示例1
输入
复制
I like beijing.
输出
复制
beijing. like I

代码：
/*#include<iostream>
#include<string>
#include<vector>
using namespace std;
int main()
{
    string s;
    getline(cin,s);
    vector<string> vs;
    string ret;
    for(int i=0;i<s.size();i++)
    {
        string str;
        while(s[i]!=' '&&s[i]!='\0')
        {
            str += s[i];
            i++;
        }
        vs.push_back(str);
    }
    for(int i = vs.size()-1;i>=0;i--)
    {
        ret+=vs[i];
        if(i!=0)
        ret+=' ';
    }
    cout<<ret<<endl;
    return 0;
}*/

#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int main()
{
    string str;
    getline(cin,str);
    //反转整个句子
    reverse(str.begin(),str.end());
    auto start = str.begin();
    while(start!= str.end())
    {
        auto end =start;
        while(end!=str.end()&&*end != ' ')
            end++;
        reverse(start,end);
        if(end == str.end())
            start = end;
        else
            start = end + 1;
    }
    cout<<str;
    return 0;
}

第二思路是一个比较讨巧的思路，直接利用cin>>s接收输入，
遇到空格就结束了，自然就分割开了每个单 词，
其次将每次接收到的单词拼接到之前串的前面就逆置过来了
#include<iostream>
#include<string>
using namespace std;
int main()
{
	string s1,s2;
	cin>>s2;
	while(cin>>s1)
		s2 = s1+ " "+s2;
	cout<<s2<<endl;
	return 0;
}