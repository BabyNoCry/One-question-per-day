题目描述
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。
求该青蛙跳上一个n级的台阶总共有多少种跳法。
分析：
f(1) = 1;
f(2)  = f(1) + 1;
f(3)  = f(2) + f(1);
f(n-1) = f(1) + f(2) + f(3) + ...+ f(n-2);
f(n) = f(1) + f(2) +f(3) + ...+ f(n-2)+ f(n-1);
合并最后两个式子：得到 f(n) = 2f(n-1);
因此就推算到： f(n)  =  2^(n-1)
 
class Solution {
public:
    //f(1) =1  f(2) = f(1) + 1 = 2; f(3) = f(1) + f(2) + 1 = 4; 
    //f(n) = 2^(n-1)   等差数列求和
    int jumpFloorII(int number) {
       return 1<<(number-1);
    }
};