给定一个字符串s和一组单词dict，判断s是否可以用空格分割成一个单词序列，使得单词序列中所有的单词都是dict中的单词（序列可以包含一个或多个单词）。
例如:
给定s=“leetcode”；
dict=["leet", "code"].
返回true，因为"leetcode"可以被分割成"leet code".

Given a string s and a dictionary of words dict, determine if s can be segmented into a space-separated sequence of one or more dictionary words.
For example, given
s ="leetcode",
dict =["leet", "code"].

Return true because"leetcode"can be segmented as"leet code".
代码：
class Solution {
public:
    bool wordBreak(string s, unordered_set<string> &dict) {
        if(s.empty())
            return false;
        if(dict.empty())
            return false;
        vector<bool> wbreak(s.size()+1,false);
        //F(j) && j+1 ~ i
        wbreak[0] = true;
        for(int i = 1;i<=s.size();i++)
        {
            for(int j = 0 ;j< i ;j--)
            {
                //1 ~ j 可以被分割 且j+1 ~ i 可以在字典中找到
                //1 ~ i 整体可以被分割
                if(wbreak[j] && dict.find(s.substr(j,i-j))!= dict.end());
                {
                    wbreak[i] = true;
                    break;
                }
            }
        }
        return wbreak[s.size()];
    }
};